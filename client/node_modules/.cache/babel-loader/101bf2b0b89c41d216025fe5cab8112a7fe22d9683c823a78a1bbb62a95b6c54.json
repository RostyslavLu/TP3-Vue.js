{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"nav\", null, [_createVNode(_component_router_link, {\n    to: \"/\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Home\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_router_link, {\n    to: \"/about\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"About\")]),\n    _: 1 /* STABLE */\n  })]), _createVNode(_component_router_view)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createElementVNode","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_","_component_router_view"],"sources":["D:\\Cegep\\4 cours\\Techniques avancees en programmation Web\\TravailPratique\\TP3Vue\\client\\src\\App.vue"],"sourcesContent":["<template>\n  <nav>\n    <router-link to=\"/\">Home</router-link>\n    <router-link to=\"/about\">About</router-link>\n  </nav>\n  <router-view/>\n</template>\n\n<script>\nimport ProductDataService from '@/services/ProductDataService.js'\nexport default {\n  mounted () {\n    ProductDataService.getAll()\n      .then(response => {\n        this.inventory = response.data\n      })\n      .catch(e => {\n        console.log(e)\n      })\n  },\n  data () {\n    return {\n      inventory: []\n    }\n  },\n  methods: {\n    addProduct (product) {\n      ProductDataService.create(product)\n        .then(response => {\n          this.inventory.push(response.data)\n        })\n        .catch(e => {\n          console.log(e)\n        })\n    },\n    updateProduct (product) {\n      ProductDataService.update(product.id, product)\n        .then(response => {\n          console.log(response.data)\n        })\n        .catch(e => {\n          console.log(e)\n        })\n    },\n    \n  }\n}\n</script>\n"],"mappings":";;;;uBAAAA,mBAAA,CAAAC,SAAA,SACEC,mBAAA,CAGM,cAFJC,YAAA,CAAsCC,sBAAA;IAAzBC,EAAE,EAAC;EAAG;IAFvBC,OAAA,EAAAC,QAAA,CAEwB,MAAI,CAF5BC,gBAAA,CAEwB,MAAI,E;IAF5BC,CAAA;MAGIN,YAAA,CAA4CC,sBAAA;IAA/BC,EAAE,EAAC;EAAQ;IAH5BC,OAAA,EAAAC,QAAA,CAG6B,MAAK,CAHlCC,gBAAA,CAG6B,OAAK,E;IAHlCC,CAAA;QAKEN,YAAA,CAAcO,sBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}