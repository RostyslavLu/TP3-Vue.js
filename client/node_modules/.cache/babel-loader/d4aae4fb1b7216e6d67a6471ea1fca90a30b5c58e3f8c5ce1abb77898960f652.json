{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ProductDataService from '@/services/ProductDataService.js';\nexport default {\n  mounted() {\n    ProductDataService.getAll().then(response => {\n      this.inventory = response.data;\n    }).catch(e => {\n      console.log(e);\n    });\n  },\n  data() {\n    return {\n      inventory: [],\n      name: '',\n      price: '',\n      quantity: ''\n    };\n  },\n  methods: {\n    addInv() {\n      const product = {\n        name: this.name,\n        price: this.price,\n        quantity: this.quantity\n      };\n      ProductDataService.create(product).then(response => {\n        this.inventory.push(response.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    updateInv(product) {\n      ProductDataService.update(product.id, product).then(response => {\n        console.log(response.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    removeInv(id) {\n      ProductDataService.delete(id).then(response => {\n        console.log(response.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  }\n};","map":{"version":3,"names":["ProductDataService","mounted","getAll","then","response","inventory","data","catch","e","console","log","name","price","quantity","methods","addInv","product","create","push","updateInv","update","id","removeInv","delete"],"sources":["D:\\Cegep\\4 cours\\Techniques avancees en programmation Web\\TravailPratique\\TP3Vue\\client\\src\\views\\ProductView.vue"],"sourcesContent":["<template>\r\n  <div class=\"product\">\r\n    <h1>Products</h1>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Price</th>\r\n          <th>Quantity</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"product in inventory\" :key=\"product.id\">\r\n          <td>{{ product.name }}</td>\r\n          <td>{{ product.price }}</td>\r\n          <td>{{ product.quantity }}</td>\r\n          <td>\r\n            <button @click=\"updateInv(product)\">Edit</button>\r\n            <button @click=\"removeInv(product.id)\">Delete</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <h2>Add Product</h2>\r\n    <form @submit.prevent=\"addInv\">\r\n      <label for=\"name\">Name</label>\r\n      <input type=\"text\" id=\"name\" v-model=\"name\" />\r\n      <label for=\"price\">Price</label>\r\n      <input type=\"text\" id=\"price\" v-model=\"price\" />\r\n      <label for=\"quantity\">Quantity</label>\r\n      <input type=\"text\" id=\"quantity\" v-model=\"quantity\" />\r\n      <button type=\"submit\">Add</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ProductDataService from '@/services/ProductDataService.js'\r\nexport default {\r\n  mounted () {\r\n    ProductDataService.getAll()\r\n      .then(response => {\r\n        this.inventory = response.data\r\n      })\r\n      .catch(e => {\r\n        console.log(e)\r\n      })\r\n  },\r\n  data () {\r\n    return {\r\n      inventory: [],\r\n      name: '',\r\n      price: '',\r\n      quantity: ''\r\n    }\r\n  },\r\n  methods: {\r\n    addInv () {\r\n      const product = {\r\n        name: this.name,\r\n        price: this.price,\r\n        quantity: this.quantity\r\n      }\r\n      ProductDataService.create(product)\r\n        .then(response => {\r\n          this.inventory.push(response.data)\r\n        })\r\n        .catch(e => {\r\n          console.log(e)\r\n        })\r\n    },\r\n    updateInv (product) {\r\n      ProductDataService.update(product.id, product)\r\n        .then(response => {\r\n          console.log(response.data)\r\n        })\r\n        .catch(e => {\r\n          console.log(e)\r\n        })\r\n    },\r\n    removeInv (id) {\r\n      ProductDataService.delete(id)\r\n        .then(response => {\r\n          console.log(response.data)\r\n        })\r\n        .catch(e => {\r\n          console.log(e)\r\n        })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";AAsCA,OAAOA,kBAAiB,MAAO,kCAAiC;AAChE,eAAe;EACbC,OAAMA,CAAA,EAAK;IACTD,kBAAkB,CAACE,MAAM,CAAC,EACvBC,IAAI,CAACC,QAAO,IAAK;MAChB,IAAI,CAACC,SAAQ,GAAID,QAAQ,CAACE,IAAG;IAC/B,CAAC,EACAC,KAAK,CAACC,CAAA,IAAK;MACVC,OAAO,CAACC,GAAG,CAACF,CAAC;IACf,CAAC;EACL,CAAC;EACDF,IAAGA,CAAA,EAAK;IACN,OAAO;MACLD,SAAS,EAAE,EAAE;MACbM,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,MAAKA,CAAA,EAAK;MACR,MAAMC,OAAM,GAAI;QACdL,IAAI,EAAE,IAAI,CAACA,IAAI;QACfC,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,QAAQ,EAAE,IAAI,CAACA;MACjB;MACAb,kBAAkB,CAACiB,MAAM,CAACD,OAAO,EAC9Bb,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACC,SAAS,CAACa,IAAI,CAACd,QAAQ,CAACE,IAAI;MACnC,CAAC,EACAC,KAAK,CAACC,CAAA,IAAK;QACVC,OAAO,CAACC,GAAG,CAACF,CAAC;MACf,CAAC;IACL,CAAC;IACDW,SAAQA,CAAGH,OAAO,EAAE;MAClBhB,kBAAkB,CAACoB,MAAM,CAACJ,OAAO,CAACK,EAAE,EAAEL,OAAO,EAC1Cb,IAAI,CAACC,QAAO,IAAK;QAChBK,OAAO,CAACC,GAAG,CAACN,QAAQ,CAACE,IAAI;MAC3B,CAAC,EACAC,KAAK,CAACC,CAAA,IAAK;QACVC,OAAO,CAACC,GAAG,CAACF,CAAC;MACf,CAAC;IACL,CAAC;IACDc,SAAQA,CAAGD,EAAE,EAAE;MACbrB,kBAAkB,CAACuB,MAAM,CAACF,EAAE,EACzBlB,IAAI,CAACC,QAAO,IAAK;QAChBK,OAAO,CAACC,GAAG,CAACN,QAAQ,CAACE,IAAI;MAC3B,CAAC,EACAC,KAAK,CAACC,CAAA,IAAK;QACVC,OAAO,CAACC,GAAG,CAACF,CAAC;MACf,CAAC;IACL;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}